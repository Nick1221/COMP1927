a)The dict3 file has roughly 98,000 words in it. What is the maximum chain length if a hash table size of 9803 is used? How does the chain length distribution change if the hash table size is 16249? 16383 (i.e. 214-1)? 16384 (i.e. 214)? 20000? 29959?

Reading words from dict3
Hash Table Stats:
Number of slots = 9803
Number of items = 98099
Chains
 Length    Freq
      0       1
      1       2
      2      24
      3      89
      4     197
      5     396
      6     646
      7     871
      8    1086
      9    1171
     10    1223
     11    1080
     12     905
     13     722
     14     530
     15     335
     16     242
     17     118
     18      75
     19      48
     20      25
     21       9
     22       4
     23       3
     24       0
     25       0
     26       0
     27       1
Testing completed OK



Reading words from dict3
Hash Table Stats:
Number of slots = 16249
Number of items = 98099
Chains
 Length    Freq
      0      41
      1     243
      2     719
      3    1447
      4    2220
      5    2606
      6    2505
      7    2193
      8    1662
      9    1115
     10     703
     11     421
     12     193
     13     103
     14      47
     15      18
     16      10
     17       3
Testing completed OK


Reading words from dict3
Hash Table Stats:
Number of slots = 16383
Number of items = 98099
Chains
 Length    Freq
      0     188
      1     810
      2    1499
      3    2065
      4    2272
      5    2257
      6    1908
      7    1479
      8    1086
      9     731
     10     556
     11     351
     12     246
     13     153
     14      94
     15      93
     16      63
     17      55
     18      55
     19      38
     20      45
     21      45
     22      27
     23      27
     24      32
     25      35
     26      27
     27      24
     28      18
     29      24
     30      15
     31      14
     32       8
     33       7
     34      13
     35       4
     36       7
     37       4
     38       3
     39       1
     40       1
     41       1
     42       0
     43       1
     44       1
Testing completed OK


Reading words from dict3
Hash Table Stats:
Number of slots = 16384
Number of items = 98099
Chains
 Length    Freq
      0      75
      1     366
      2     971
      3    1632
      4    2221
      5    2467
      6    2320
      7    1919
      8    1547
      9    1038
     10     737
     11     492
     12     294
     13     147
     14      73
     15      44
     16      16
     17      15
     18       3
     19       5
     20       1
     21       0
     22       1
Testing completed OK


Reading words from dict3
Hash Table Stats:
Number of slots = 20000
Number of items = 98099
Chains
 Length    Freq
      0    2011
      1    3072
      2    3199
      3    2619
      4    2061
      5    1482
      6    1139
      7     828
      8     701
      9     483
     10     402
     11     352
     12     252
     13     206
     14     156
     15     118
     16     123
     17     104
     18      78
     19      47
     20      54
     21      38
     22      31
     23      32
     24      29
     25      31
     26      19
     27      20
     28      27
     29      30
     30      18
     31      15
     32       8
     33      17
     34      19
     35      15
     36       8
     37      11
     38       7
     39       7
     40       2
     41       7
     42       9
     43       7
     44       5
     45       5
     46       3
     47       4
     48       3
     49       5
     50       4
     51       3
     52       4
     53       2
     54       2
     55       3
     56       4
     57       2
     58       6
     59       4
     60       4
     61       2
     62       1
     63       7
     64       4
     65       4
     66       3
     67       4
     68       2
     69       0
     70       1
     71       1
     72       1
     73       0
     74       1
     75       2
     76       0
     77       2
     78       3
     79       0
     80       0
     81       0
     82       2
     83       1
     84       1
     85       0
     86       0
     87       0
     88       0
     89       0
     90       0
     91       1
Testing completed OK

Reading words from dict3
Hash Table Stats:
Number of slots = 29959
Number of items = 98099
Chains
 Length    Freq
      0    1219
      1    3688
      2    6216
      3    6492
      4    5316
      5    3478
      6    2010
      7     917
      8     370
      9     161
     10      58
     11      27
     12       7
Testing completed OK


b) What would be a suitable hash table size that keeps the maximum chain length under 10, and has most chains with length 1 or 2?

Reading words from dict3
Hash Table Stats:
Number of slots = 49999
Number of items = 98099
Chains
 Length    Freq
      0    7242
      1   13625
      2   13519
      3    8723
      4    4323
      5    1731
      6     600
      7     180
      8      45
      9      10
     10       1
Testing completed OK

c) Examine the profile for the words program for a number of the above table sizes. What are the most costly functions (in terms of overall time)?

10000
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ns/call  ns/call  name    
 66.74      0.02     0.02   196202   102.05   102.05  hash
 33.37      0.03     0.01    98099   102.05   204.09  HashTableInsert
 
 16383
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ns/call  ns/call  name    
 25.03      0.01     0.01   196202    51.02    51.02  hash
 25.03      0.02     0.01   196200    51.02    51.02  ItemGet
 25.03      0.03     0.01    98103   102.04   102.04  ListSearch
 25.03      0.04     0.01    98099   102.05   102.05  ListInsert

16384
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 60.06      0.03     0.03   196202     0.00     0.00  hash
 20.02      0.04     0.01    98099     0.00     0.00  ListInsert
 20.02      0.05     0.01    16384     0.00     0.00  dropList
 
 20000
   %   cumulative   self              self     total           
 time   seconds   seconds    calls  ns/call  ns/call  name    
 75.08      0.03     0.03   196202   153.07   153.07  hash
 25.03      0.04     0.01                             main
 
 29959
   %   cumulative   self              self     total           
 time   seconds   seconds    calls  ns/call  ns/call  name    
 75.08      0.03     0.03   196202   153.07   153.07  hash
 25.03      0.04     0.01    98099   102.05   255.12  HashTableInsert

Most costly function is hash for all the runs

d) Simplify the hash function so that there are more collisions as a tradeoff for less time used for hash function 

e)
29959
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 33.37      0.01     0.01    98103     0.00     0.00  HashTableSearch
 33.37      0.02     0.01    98103     0.00     0.00  ListSearch
 33.37      0.03     0.01    59924     0.00     0.00  ListLength
 
 20000
   %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 50.05      0.02     0.02  1712661     0.00     0.00  cmp
 25.03      0.03     0.01   196240     0.00     0.00  hash
 25.03      0.04     0.01    40009     0.00     0.00  ListLength
